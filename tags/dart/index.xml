<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dart on 小站</title>
    <link>https://clsrfish.github.io/Blog/tags/dart/</link>
    <description>Recent content in Dart on 小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>207-2018 © This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Sat, 17 Nov 2018 18:39:09 +0800</lastBuildDate>
    
	<atom:link href="https://clsrfish.github.io/Blog/tags/dart/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Dart] 什么是 Mixins</title>
      <link>https://clsrfish.github.io/Blog/post/1e4790f7473c20aa35d72cf542d39ab4/</link>
      <pubDate>Sat, 17 Nov 2018 18:39:09 +0800</pubDate>
      
      <guid>https://clsrfish.github.io/Blog/post/1e4790f7473c20aa35d72cf542d39ab4/</guid>
      <description>&lt;p&gt;Dart 中提供 mixin 来完成 &lt;strong&gt;代码的复用&lt;/strong&gt;，比如我们可以将某种行为封装成一个 mixin，然后添加到需要该项行为的类中。但是似乎抽象类/接口也能完成，它们面向的场景还是有些许差别的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Flutter] Dart 面向对象</title>
      <link>https://clsrfish.github.io/Blog/post/0a0b0654aaf3818face2c27f74ebc7c4/</link>
      <pubDate>Tue, 25 Sep 2018 18:29:15 +0800</pubDate>
      
      <guid>https://clsrfish.github.io/Blog/post/0a0b0654aaf3818face2c27f74ebc7c4/</guid>
      <description>&lt;p&gt;Dart 是一门纯粹的面向对象的语言，即任何变量或实例都是 &lt;code&gt;Object&lt;/code&gt; 的实例。同时 Dart 不支持多继承，但是支持 &lt;strong&gt;Mixin&lt;/strong&gt; 特性，即一个类的定义在 &lt;strong&gt;不被继承&lt;/strong&gt; 的情况被其它类复用。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>